# Docker Compose environment configuration.
COMPOSE_PROJECT_NAME='Team'

BACKEND_SERVER_HOST='localhost'
BACKEND_SERVER_PORT=0000
BACKEND_BASE_URL='http://localhost:0000/api/v1'

# A JSON-formatted list of origins, accepted from our API
BACKEND_CORS_ORIGINS='["http://localhost:9999","https://localhost:9999","localhost:9999"]'
IS_DEBUG_SESSION=TrueOrFalse
SHOW_SENSITIVE_ENDPOINTS=TrueOrFalse
BACKEND_DEBUG_PORT=0000
AADE_BATCH_SIZE=100

# Trefik's docker environment configuration.
PGADMIN_HOST='{HOSTNAME}'
FRONTEND_HOST='{HOSTNAME}'
CERTIFICATE_EMAIL='{EMAIL}'

# Encryption password for creation.
ENCRYPTION_PASSWORD='pass'
ENCRYPTION_FILE_PATH='key.key'
ENCRYPTION='{PASSWORD}'

# Encryption's docker environment configuration.
SHARED_FOLDER_NAME='shared'
ENCRYPTION_KEYS_FOLDER_NAME='.keys'
FERNET_KEY_FILE_NAME='fernet.key'
JWT_BEARER_KEY_FILE_NAME='jwt_bearer.key'
ENCRYPTION_ALGORITHM='HS256'
KDF_SALT=0
# to get a string like this run:
# openssl rand -hex 32
SECRET_KEY='{KEY}'
ALGORITHM='HS256'
ACCESS_TOKEN_EXPIRATION_MINUTES=90

# PostgreSQL's docker environment configuration.
POSTGRES_DIALECT='postgresql'
POSTGRES_ASYNC_DRIVER='asyncpg'
POSTGRES_SYNC_DRIVER='psycopg2'
POSTGRES_DRIVER='psycopg2'
POSTGRES_SERVER='team'
POSTGRES_PORT=5492
POSTGRES_DB='team'
# POSTGRES_HOST='mydataease_postgres'
POSTGRES_USER='postgres'
POSTGRES_PASSWORD='12345!!asdF'
POSTGRES_SHARD_ID=1
# Chunk size for the upsert postgre functions
UPSERT_CHUNK_SIZE=1000
# Chunk size for the query postgre functions, because Bind size cannot exceed Int16 size, which is 32767.
QUERY_CHUNK_SIZE=32767

# PGAdmin's docker environment configuration.
PGADMIN_PORT=5432
PGADMIN_EMAIL='fake@fake.com'
PGADMIN_PASSWORD='12345!!asdF'

# Redis's docker environment configuration.
REDIS_DIALECT='redis'
REDIS_SERVER='localhost'
REDIS_PASSWORD='12345!!asdF'
REDIS_PORT=6379

# Redis Commander's docker environment configuration.
REDIS_COMMANDER_USER='redis'
REDIS_COMMANDER_PASSWORD='12345!!asdF'
REDIS_COMMANDER_PORT=8081

# RabbitMQ's environment configuration.
# For RABBITMQ_SERVER you can use either the container name if there is name resolution, IP, or localhost if on same net.
RABBITMQ_SERVER='mydataease_rabbitmq'
RABBITMQ_USER='{USERNAME}'
RABBITMQ_PASSWORD='{PASSWORD}'
RABBITMQ_PORT=9999
RABBITMQ_TIMEOUT=60
RABBITMQ_QUEUE='mydataease_jobs'


# This was inserted by `prisma init`:
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

DATABASE_URL="postgresql://postgres:12345!!asdF@localhost:5492/team?schema=public"
